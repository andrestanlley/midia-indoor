version: "3.5"

services:
  nginx:
    restart: unless-stopped
    container_name: nginx
    build: .
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - "80:80"
      - "443:443"

  backend:
    restart: unless-stopped
    container_name: backend
    build:
      context: ./backend/
      dockerfile: ./Dockerfile
    command: npm run start
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      - PORT=3000

  frontend:
    restart: unless-stopped
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile
    ports:
      - "8080"

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  postgres:
    container_name: postgresdb
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=eleva
      - POSTGRES_PASSWORD=midiaindooreleva84
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: stanlley41@gmail.com
      PGADMIN_DEFAULT_PASSWORD: midiadigitaleleva84
      PGADMIN_CONFIG_SERVER_MODE: "True"
    volumes:
      - ./pgadmin-data:/var/lib/pgadminql/data
    ports:
      - "5050:80"
    restart: unless-stopped

volumes:
  db:
    driver: local
